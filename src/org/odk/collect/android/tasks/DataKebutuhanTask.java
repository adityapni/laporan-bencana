package org.odk.collect.android.tasks;

import android.annotation.TargetApi;
import android.os.Build;
import android.os.Environment;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.sax.SAXSource;
import javax.xml.transform.stream.StreamResult;

import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.DTDHandler;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.AttributesImpl;

@TargetApi(Build.VERSION_CODES.FROYO)
public class DataKebutuhanTask {
static int alamat=1;
static int umur=2;
static int jenis_kelamin=3;
static File data;
static File xml;
static String ODK_ROOT = Environment.getExternalStorageDirectory()
+ File.separator + "odk";
static String path = ODK_ROOT + File.separator + "kebutuhan";
public  static void WriteDataKebutuhan(String[] arraystring) throws FileNotFoundException, UnsupportedEncodingException {
	data = new File(path+File.separator+"data.txt");
	if (!data.exists()){
	data.mkdirs();
	
	}
	PrintWriter writer=new PrintWriter(data.getAbsoluteFile(),"UTF-8");
	int i=0;
	for(String item : arraystring){
		
		writer.println(arraystring[i]);
		i=i+1;
	}
	writer.close();
	xml = new File("d:\\data.xml");
	reader saxReader = new reader();
	//File f = new File(args[0]);
	try {
		
		 TransformerFactory tFactory = TransformerFactory.newInstance();
         Transformer transformer = tFactory.newTransformer();
      // Use the parser as a SAX source for input
         FileReader fr = new FileReader(data);
         BufferedReader br = new BufferedReader(fr);
         InputSource inputSource = new InputSource(br);
         SAXSource source = new SAXSource(saxReader, inputSource);

         StreamResult result = new StreamResult(xml);
         transformer.transform(source, result); 
	} catch(TransformerConfigurationException tce){
		// Error generated by the parser
        System.out.println("\n** Transformer Factory error");
        System.out.println("   " + tce.getMessage());

        // Use the contained exception, if any
        Throwable x = tce;

        if (tce.getException() != null) {
            x = tce.getException();
        }

        x.printStackTrace();
	}catch (TransformerException te) {
        // Error generated by the parser
        System.out.println("\n** Transformation error");
        System.out.println("   " + te.getMessage());

        // Use the contained exception, if any
        Throwable x = te;

        if (te.getException() != null) {
            x = te.getException();
        }

        x.printStackTrace();
    } catch (IOException ioe) {
        // I/O error
        ioe.printStackTrace();
    };
}

}
 class reader implements XMLReader{
	ContentHandler handler;
	String nsu = "";  // NamespaceURI
	  Attributes atts = new AttributesImpl();
	  String rootElement = "orang";

	  String indent = "\n      "; // for readability! 
	@Override
	public boolean getFeature(String name) throws SAXNotRecognizedException,
			SAXNotSupportedException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void setFeature(String name, boolean value)
			throws SAXNotRecognizedException, SAXNotSupportedException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Object getProperty(String name) throws SAXNotRecognizedException,
			SAXNotSupportedException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setProperty(String name, Object value)
			throws SAXNotRecognizedException, SAXNotSupportedException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setEntityResolver(EntityResolver resolver) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public EntityResolver getEntityResolver() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setDTDHandler(DTDHandler handler) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public DTDHandler getDTDHandler() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setContentHandler(ContentHandler handler) {
		// TODO Auto-generated method stub
		this.handler = handler;
	}

	@Override
	public ContentHandler getContentHandler() {
		// TODO Auto-generated method stub
		return this.handler;
	}

	@Override
	public void setErrorHandler(ErrorHandler handler) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ErrorHandler getErrorHandler() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void parse(InputSource input) throws IOException, SAXException {
		// TODO Auto-generated method stub
		try{
			java.io.Reader r = input.getCharacterStream();
			  BufferedReader Br = new BufferedReader(r); 
			  String line = Br.readLine();
		if (handler==null) {
		      throw new SAXException("No content handler");
		    }
		handler.startDocument();
		handler.startElement(nsu, rootElement,rootElement, atts);
		output("alamat","alamat",line);
		line = Br.readLine();
		output("umur","umur",line);
		line = Br.readLine();
		output("jenis_kelamin","jenis_kelamin",line);
		line = Br.readLine();
		handler.ignorableWhitespace("\n".toCharArray(), 
	            0, // start index
	            1  // length
	            );
		handler.endElement(nsu, rootElement, rootElement);
		handler.endDocument();
		
		}catch(Exception e){};
	}
	void output(String name, String prefix, String line) 
			throws SAXException 
			{
		int startIndex = prefix.length() + 2; // 2=length of ": "
		  String text = line.substring(startIndex);
		  int textLength = line.length() - startIndex;
		  handler.ignorableWhitespace(indent.toCharArray(), 
		              0, // start index
		              indent.length() 
		              );
		  handler.startElement(nsu, name, name /*"qName"*/, atts);

		  handler.characters(line.toCharArray(), 
		          startIndex,
		          textLength);
		  handler.endElement(nsu, name, name);
			}
	@Override
	public void parse(String systemId) throws IOException, SAXException {
		// TODO Auto-generated method stub
		
	}}
